{"version":3,"sources":["webpack://module.exports/webpack/bootstrap","webpack://module.exports/./src/forum/index.js","webpack://module.exports/external \"flarum.core.compat['app']\"","webpack://module.exports/external \"flarum.core.compat['components/Page']\"","webpack://module.exports/external \"flarum.core.compat['extend']\""],"names":["initializers","add","extend","prototype","ccTheme","forum","attribute","backgroundColor","consentText","buttonText","buttonBackgroundColor","learnMoreLinkText","learnMoreLinkUrl","$","prepend"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClFA;AACA;AACA;AAEA,iDAAG,CAACA,YAAJ,CAAiBC,GAAjB,CAAqB,wBAArB,EAA+C,YAAM;AACjDC,EAAA,4DAAM,CAAC,6DAAI,CAACC,SAAN,EAAiB,MAAjB,EAAyB,YAAY;AACvC,QAAIC,OAAO,GAAG,iDAAG,CAACC,KAAJ,CAAUC,SAAV,CAAoB,wBAApB,CAAd;AACA,QAAIC,eAAe,GAAG,iDAAG,CAACF,KAAJ,CAAUC,SAAV,CAAoB,gCAApB,CAAtB;AACA,QAAIE,WAAW,GAAG,iDAAG,CAACH,KAAJ,CAAUC,SAAV,CAAoB,4BAApB,CAAlB;AACA,QAAIG,UAAU,GAAG,iDAAG,CAACJ,KAAJ,CAAUC,SAAV,CAAoB,2BAApB,CAAjB;AACA,QAAII,qBAAqB,GAAG,iDAAG,CAACL,KAAJ,CAAUC,SAAV,CAAoB,sCAApB,CAA5B;AACA,QAAIK,iBAAiB,GAAG,iDAAG,CAACN,KAAJ,CAAUC,SAAV,CAAoB,kCAApB,CAAxB;AACA,QAAIM,gBAAgB,GAAG,iDAAG,CAACP,KAAJ,CAAUC,SAAV,CAAoB,iCAApB,CAAvB;AAEAO,KAAC,CAAC,MAAD,CAAD,CAAUC,OAAV,CAAkB,gIACd,oGADc,GAEd,yHAFc,GAE8GP,eAF9G,GAEgI,+BAFhI,GAEkKG,qBAFlK,GAE0L,iBAF1L,GAE6MN,OAF7M,GAEsN,4BAFtN,GAEqPI,WAFrP,GAEmQ,iBAFnQ,GAEuRC,UAFvR,GAEoS,cAFpS,GAEqTE,iBAFrT,GAEyU,cAFzU,GAE0VC,gBAF1V,GAE6W,kBAF/X;AAGH,GAZK,CAAN;AAaH,CAdD,E;;;;;;;;;;;ACJA,2C;;;;;;;;;;;ACAA,uD;;;;;;;;;;;ACAA,8C","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./forum.js\");\n","import app from 'flarum/app';\nimport {extend} from 'flarum/extend';\nimport Page from 'flarum/components/Page';\n\napp.initializers.add('zaptech-cookie-consent', () => {\n    extend(Page.prototype, 'init', function () {\n        let ccTheme = app.forum.attribute(\"cookie-consent.ccTheme\");\n        let backgroundColor = app.forum.attribute(\"cookie-consent.backgroundColor\");\n        let consentText = app.forum.attribute(\"cookie-consent.consentText\");\n        let buttonText = app.forum.attribute(\"cookie-consent.buttonText\");\n        let buttonBackgroundColor = app.forum.attribute(\"cookie-consent.buttonBackgroundColor\");\n        let learnMoreLinkText = app.forum.attribute(\"cookie-consent.learnMoreLinkText\");\n        let learnMoreLinkUrl = app.forum.attribute(\"cookie-consent.learnMoreLinkUrl\");\n\n        $('head').prepend('<link rel=\"stylesheet\" type=\"text/css\" href=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.0.3/cookieconsent.min.css\"/>' +\n            '<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.0.3/cookieconsent.min.js\"></script>' +\n            '<script>window.addEventListener(\"load\", function(){window.cookieconsent.initialise({\"palette\":{\"popup\":{\"background\": \"' + backgroundColor + '\"}, \"button\":{\"background\": \"' + buttonBackgroundColor + '\"}}, \"theme\": \"'+ ccTheme +'\", \"content\":{\"message\": \"' + consentText + '\", \"dismiss\": \"' + buttonText + '\", \"link\": \"' + learnMoreLinkText + '\", \"href\": \"' + learnMoreLinkUrl + '\"}})});</script>');\n    });\n});","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['components/Page'];","module.exports = flarum.core.compat['extend'];"],"sourceRoot":""}